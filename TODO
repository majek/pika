Here goes the list of bugs, limitations, ideas and feature requests.

 o delayed_call is not implemented on blocking_adapter.py.

 o We should at least pretend that we test the code. Test coverage
   below 80% is a shame.

 o The single most important thing: running many connections
   doesn't work! You can run only a single connection.
   As asyncore is global, you can't work around it by running
   multiple threads.

 o There's no error handling. Once the lib fails, you receive
   only a minor, badly structured traceback from asyncore.

 o If AMQP broker is dead, return nice and predictable exception.

 o If I want to use threads - I should be able to.
   (or in other words: replace global asyncore with select)

 o Once every client dies - asyncore still loops. It should
   exit after all the descriptors are closed. Or how do you
   actually handle application exit?

 o There's no reasonable way of flushing connection. What to
   do if you want to send a million messages (which is not blocking)?
   It ends up in creating huuuuge in-memory buffer which
   is flushed only after you enter asyncore or some other blocking
   request.

 o We should be able to handle "flow", probably user should
   be able to set the callback function.

 o Handle UTF in password/username or message body. At least print nice error.

 o Do something when user/pass is bad.
 
 o As we don't have any reasonable documentation, we should 
   give as many small examples as possible. It's pretty complicated
   to dig in some details, like:
     * how to get number of messages from the queue
       (or in other words: what is the output of ch.queue_declare)
     * how to set message to be persistent
     * how to get/set headers on message

 o SSL support?


